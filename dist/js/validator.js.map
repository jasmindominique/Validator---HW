{"version":3,"sources":["validator.js"],"names":["console","log","validator","formSelector","inputSelector","userCode","$input","$form","addEventListener","formSubmitListener","easterEggListener","aDomEvent","preventDefault","anotherDomEvent","secretCode","secretBox","document","querySelector","secret","value","style","visibility","innerHTML","position","setTimeout","setupListeners","undefined"],"mappings":";;;;;;AAAA;AACAA,OAAO,CAACC,GAAR,CAAY,OAAZ;;IACMC,S,GACE;AACA;AACA;AACJ,mBAAYC,YAAZ,EAA0BC,aAA1B,EAAyCC,QAAzC,EAAkD;AAAA;;AAAA;;AAAA,0CAoBjC,YAAM;AACnBL,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B,KAAI,CAACK,MAAnC;;AACA,IAAA,KAAI,CAACC,KAAL,CAAWC,gBAAX,CAA4B,QAA5B,EAAsC,KAAI,CAACC,kBAA3C;;AACA,IAAA,KAAI,CAACH,MAAL,CAAYE,gBAAZ,CAA6B,OAA7B,EAAsC,KAAI,CAACE,iBAA3C,EAHmB,CAIS;;AAC/B,GAzBiD;;AAAA,8CA4B7B,UAACC,SAAD,EAAe;AAChCX,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCU,SAAlC;AACAA,IAAAA,SAAS,CAACC,cAAV;AACH,GA/BiD;;AAAA,6CAkC/B,UAACC,eAAD,EAAoB;AACnC,QAAMC,UAAU,GAAE,SAAlB;AACA,QAAIC,SAAS,GAAEC,QAAQ,CAACC,aAAT,CAAuB,YAAvB,CAAf;AACA,QAAIC,MAAM,GAAEF,QAAQ,CAACC,aAAT,CAAuB,SAAvB,CAAZ;AAGAjB,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAA6CY,eAA7C,EAA8D,KAAI,CAACR,QAAnE;;AAEA,QAAI,KAAI,CAACC,MAAL,CAAYa,KAAZ,KAAsB,KAAI,CAACd,QAA/B,EAAwC;AAEpCa,MAAAA,MAAM,CAACE,KAAP,CAAaC,UAAb,GAA0B,SAA1B;AACAH,MAAAA,MAAM,CAACI,SAAP,GAAmB,KAAI,CAACjB,QAAxB;AACAa,MAAAA,MAAM,CAACE,KAAP,CAAaG,QAAb,GAAwB,UAAxB;AAEAvB,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACH;;AACGuB,IAAAA,UAAU,CAAC,YAAU;AACrBN,MAAAA,MAAM,CAACE,KAAP,CAAaC,UAAb,GAA0B,QAA1B;AACC,KAFS,EAEP,IAFO,CAAV;AAIH,GAvD6C;;AAC9C;AACArB,EAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ,EAAoDE,YAApD,EAAkEC,aAAlE,EAAiFC,QAAjF,EAF8C,CAI9C;AACA;AACA;;AAED,OAAKE,KAAL,GAAaS,QAAQ,CAACC,aAAT,CAAuBd,YAAvB,CAAb;AACA,OAAKG,MAAL,GAAcU,QAAQ,CAACC,aAAT,CAAuBb,aAAvB,CAAd;AACA,OAAKC,QAAL,GAAgB,SAAhB;AACA,OAAKoB,cAAL;;AAEA,MAAIpB,QAAQ,IAAGqB,SAAf,EAAyB;AACpB,SAAKrB,QAAL,GAAgBA,QAAQ,CAACS,UAAzB;AACJ;AACH,C,CAED;AACA;EAyCJ;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEQ;AACA;AACA;AACA;AACA","sourcesContent":["//Class notes from Chelsea  + Current HW\nconsole.log(\"hello\")\nclass validator{\n        //when creating a class there is no classwide variable. \n        //class-wide variables are created by assigning it to *this* (i.e this.$form)\n        //this is the first function called wen the the class is instantiated (created) in main.js\n    constructor(formSelector, inputSelector, userCode){\n        //confirms the selector that this validator is using for output\n        console.log('validator has been constructed! for:', formSelector, inputSelector, userCode);\n\n        // store a refrence to our DOM element as this.$form\n        //this.$form becomes a classwide variable when attached to *this*\n        //so we can use it elsewhere inside THIS class (class validator) / instance \n        \n       this.$form = document.querySelector(formSelector);\n       this.$input = document.querySelector(inputSelector);\n       this.userCode = 'puppies';\n       this.setupListeners();\n\n       if (userCode !=undefined){\n            this.userCode = userCode.secretCode;\n       }        \n    }\n\n    // this is the first method called in the construcor\n    //so this is our next line for our logic flow\n    setupListeners = () => {\n        console.log('setupListeners', this.$input);\n        this.$form.addEventListener('submit', this.formSubmitListener);\n        this.$input.addEventListener('keyup', this.easterEggListener);\n                                    //when keyup happens, call this function\n    }\n\n\n    formSubmitListener = (aDomEvent) => {\n        console.log('formSubmitListener', aDomEvent);\n        aDomEvent.preventDefault();\n    }\n\n\n    easterEggListener= (anotherDomEvent) =>{\n        const secretCode= 'puppies';\n        let secretBox= document.querySelector('.secretbox');\n        let secret= document.querySelector('.secret');\n\n\n        console.log('where is my secret message');\n        console.log('easterEggListener is present:', anotherDomEvent, this.userCode);\n       \n        if (this.$input.value === this.userCode){\n\n            secret.style.visibility = 'visible';\n            secret.innerHTML = this.userCode;\n            secret.style.position = 'absolute';\n            \n            console.log('the world is quiet here');\n        }\n            setTimeout(function(){\n            secret.style.visibility = 'hidden';\n            }, 3000);\n\n        }    \n    }\n\n\n\n// else if (this.$input.value === userCode){\n\n//             secret.style.visibility = 'visible';\n//             secret.innerHTML = userCode;\n//             secret.style.position = 'absolute';\n//             secret.style.background-color = 'blue';\n//             secret.style.color = 'white';\n\n//             console.log('the world is quiet here');\n//         }\n\n        // const defaultOptions={\n        //         secret.style.visibility = 'visible',\n        //         secret.innerHTML = secretCode,\n        //         secret.style.position = 'absolute',\n        //     } \n\n\n\n\n"],"file":"validator.js"}